#Task1 Task 1
#Create a class method named `validate`, which should be called from the `__init__` method to validate parameter email, passed to the constructor. The logic inside the `validate` method could be to check if the passed email parameter is a valid email string.

import re #regular expressions module

class Email:
    def __init__(self, email):
        self.email = email
        self.validate(email)

    @classmethod
    def validate(cls, email):
        if not re.match(r"[^@]+@[^@]+\.[^@]+", email):
            raise ValueError("Invalid email address")

        prefix, domain = email.split("@")
        if not re.match(r"^[a-zA-Z0-9._-]+$", prefix):
            raise ValueError("Invalid email prefix")

        if not re.match(r"^[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$", domain):
            raise ValueError("Invalid email domain")

rand_email = Email("winter.me@ukr.net")  #створили екземпляр класу Email якщо все ок буде створено object
#якщо формат не пройшов перевiрку то викине ValueError
print(rand_email) #<__main__.Email object at 0x103b04160> object створено а значить email пройшов перевiрку успiшно
weird_email = Email('notanemail')
print(weird_email) #   raise ValueError("Invalid email address")
#ValueError: Invalid email address

email_str = 'this.email@ukr.net'
email_1 = 'thiswewe'
print(Email.validate(email_str)) #None
print(Email.validate(email_1)) # raise ValueError("Invalid email address")
#ValueError: Invalid email address
